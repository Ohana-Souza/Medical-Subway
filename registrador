library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.STD_LOGIC_ARITH.ALL;
use IEEE.STD_LOGIC_UNSIGNED.ALL;

entity RegAndarQuarto is
    Port (
        clk : in std_logic;  -- Sinal de clock
        reset : in std_logic;  -- Sinal de reset
        enable : in std_logic;  -- Sinal de habilitação para gravação
        andar_in : in std_logic_vector(2 downto 0);  -- Entrada do andar
        quarto_in : in std_logic_vector(3 downto 0);  -- Entrada do quarto
        andar_out : out std_logic_vector(2 downto 0);  -- Saída do andar
        quarto_out : out std_logic_vector(3 downto 0)  -- Saída do quarto
    );
end RegAndarQuarto;

architecture Behavioral of RegAndarQuarto is
    signal andar_reg : std_logic_vector(2 downto 0);
    signal quarto_reg : std_logic_vector(3 downto 0);
begin
    process(clk, reset)
    begin
        if reset = '1' then
            andar_reg <= (others => '0');
            quarto_reg <= (others => '0');
        elsif rising_edge(clk) then
            if enable = '1' then
                andar_reg <= andar_in;
                quarto_reg <= quarto_in;
            end if;
        end if;
    end process;
    
    andar_out <= andar_reg;
    quarto_out <= quarto_reg;
end Behavioral;
